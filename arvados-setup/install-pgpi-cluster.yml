- hosts: arvados_cluster_host
  tasks:
    - name: Install tailscale cert
      become: yes
      ansible.builtin.command:
        argv:
          - tailscale
          - cert
          - "--cert-file={{ arvados_tls.Default.cert }}"
          - "--key-file={{ arvados_tls.Default.key }}"
          - "{{ inventory_hostname }}"
        creates: "{{ arvados_tls.Default.key }}"

- name: Install Arvados cluster
  ansible.builtin.import_playbook: "{{ arvados_srcdir|default(lookup('ansible.builtin.env', 'HOME') ~ '/arvados') }}/tools/ansible/install-arvados-cluster.yml"

- hosts: arvados_cluster_host
  tasks:
    - name: Create systemd-resolved configuration file directory
      become: yes
      ansible.builtin.file:
        path: "/etc/systemd/resolved.conf.d"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Configure systemd-resolved DNS stub listener with Docker daemon
      become: yes
      ansible.builtin.copy:
        dest: "/etc/systemd/resolved.conf.d/docker-listener.conf"
        content: |
          [Resolve]
          DNSStubListenerExtra=172.17.0.1
        owner: root
        group: root
        mode: 0644

    - name: Create service drop-in file directory for systemd-resolved service
      become: yes
      ansible.builtin.file:
        path: "/etc/systemd/systemd-resolved.service.d"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Update systemd-resolved drop-in service file
      become: yes
      ansible.builtin.copy:
        dest: "/etc/systemd/systemd-resolved.service.d/after-docker.conf"
        content: |
          [Unit]
          Wants=docker.service
          After=docker.service
        owner: root
        group: root
        mode: 0644

    - name: Stop Docker service
      become: yes
      ansible.builtin.systemd_service:
        name: docker
        state: stopped

    - name: Restart systemd-resolved service that now wants Docker
      become: yes
      ansible.builtin.systemd_service:
        name: systemd-resolved
        daemon_reload: true
        state: restarted

- hosts: arvados_cluster_host
  tasks:
    - name: Install arvados-client (for diagnostics)
      become: yes
      ansible.builtin.apt:
        name: arvados-client
